name: Build NAPI Cross-Platform

on:
  push:
    branches: [main]
    paths:
      - 'runtimes/napi-bridge/**'
  pull_request:
    branches: [main]
    paths:
      - 'runtimes/napi-bridge/**'
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            build: |
              cd runtimes/napi-bridge
              pnpm build --target x86_64-apple-darwin
              strip -x *.node
          - host: macos-latest
            target: aarch64-apple-darwin
            build: |
              cd runtimes/napi-bridge
              pnpm build --target aarch64-apple-darwin
              strip -x *.node
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
            build: |
              cd runtimes/napi-bridge
              pnpm build --target x86_64-unknown-linux-gnu
              strip *.node
          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian-aarch64
            build: |
              cd runtimes/napi-bridge
              pnpm build --target aarch64-unknown-linux-gnu
              aarch64-linux-gnu-strip *.node
          - host: windows-latest
            target: x86_64-pc-windows-msvc
            build: |
              cd runtimes/napi-bridge
              pnpm build --target x86_64-pc-windows-msvc
    name: stable - ${{ matrix.settings.target }} - node@18
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: pnpm
      - name: Install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.settings.target }}
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: ${{ matrix.settings.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: goto-bus-stop/setup-zig@v2
        if: ${{ matrix.settings.target == 'armv7-unknown-linux-gnueabihf' }}
        with:
          version: 0.10.1
      - name: Setup toolchain
        run: ${{ matrix.settings.setup }}
        if: ${{ matrix.settings.setup }}
        shell: bash
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build in docker
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: '--user 0:0 -v ${{ github.workspace }}/.cargo-cache:/root/.cargo/registry/cache -v ${{ github.workspace }}/.cargo/registry/index:/root/.cargo/registry/index -v ${{ github.workspace }}:/build -w /build'
          run: ${{ matrix.settings.build }}
      - name: Build
        run: ${{ matrix.settings.build }}
        if: ${{ !matrix.settings.docker }}
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: bindings-${{ matrix.settings.target }}
          path: runtimes/napi-bridge/*.node
          if-no-files-found: error

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: pnpm
          registry-url: https://registry.npmjs.org/
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Move artifacts
        run: |
          cd runtimes/napi-bridge
          for dir in ../../artifacts/bindings-*/; do
            if [ -d "$dir" ]; then
              cp "$dir"/*.node . || true
            fi
          done
          ls -la *.node
      - name: List packages
        run: ls -la runtimes/napi-bridge/npm
        continue-on-error: true
      - name: Publish
        run: |
          cd runtimes/napi-bridge
          npm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}