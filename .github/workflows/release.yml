name: Release and Publish

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Run tests
        run: pnpm test

      - name: Update package versions
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Publishing version: $VERSION"
          
          # Update all package versions
          node scripts/update-versions.js $VERSION

      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Set npm auth token
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
          
          # Publish packages in correct order
          pnpm --filter @rizome/next-rc-types publish --no-git-checks --access public
          pnpm --filter @rizome/next-rc-v8 publish --no-git-checks --access public
          pnpm --filter @rizome/next-rc-wasm publish --no-git-checks --access public
          pnpm --filter @rizome/next-rc-ebpf publish --no-git-checks --access public
          pnpm --filter @rizome/next-rc-python publish --no-git-checks --access public
          pnpm --filter @rizome/next-rc-core publish --no-git-checks --access public
          pnpm --filter @rizome/next-rc-lattice publish --no-git-checks --access public
          pnpm --filter @rizome/next-rc publish --no-git-checks --access public

  build-native:
    needs: publish
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            platform: linux-x64-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            platform: linux-arm64-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
            platform: darwin-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            platform: darwin-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            platform: win32-x64-msvc
    
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build native bindings
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
        run: |
          cd runtimes/napi-bridge
          pnpm build --target ${{ matrix.target }} --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: bindings-${{ matrix.platform }}
          path: runtimes/napi-bridge/*.node

  publish-native:
    needs: build-native
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Move binaries to correct locations
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/v}
          
          # Update native package version
          cd runtimes/napi-bridge
          npm version $VERSION --no-git-tag-version
          
          # Move binaries
          cp artifacts/bindings-linux-x64-gnu/*.node npm/linux-x64-gnu/
          cp artifacts/bindings-linux-arm64-gnu/*.node npm/linux-arm64-gnu/
          cp artifacts/bindings-darwin-x64/*.node npm/darwin-x64/
          cp artifacts/bindings-darwin-arm64/*.node npm/darwin-arm64/
          cp artifacts/bindings-win32-x64-msvc/*.node npm/win32-x64-msvc/

      - name: Publish platform packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
          cd runtimes/napi-bridge
          node ../../scripts/publish-napi-platforms.js

      - name: Publish main native package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd runtimes/napi-bridge
          npm publish --access public