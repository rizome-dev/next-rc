name: Coverage Report

on:
  schedule:
    # Run every day at midnight UTC
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  coverage:
    name: Generate Coverage Report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'pnpm'
          
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            runtimes/wasm
            runtimes/ebpf
            runtimes/python
            runtimes/shared
            runtimes/napi-bridge
            
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libbpf-dev \
            libclang-dev \
            llvm-dev \
            python3-dev \
            python3-pip
          pip3 install numpy scikit-learn
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build all components
        run: |
          # Build Rust components
          cd runtimes/napi-bridge && cargo build --release && cd ../..
          cd runtimes/wasm && cargo build --release && cd ../..
          cd runtimes/ebpf && cargo build --release && cd ../..
          cd runtimes/python && cargo build --release && cd ../..
          
          # Build TypeScript packages
          pnpm build
          
      - name: Run all tests with coverage
        run: pnpm test:coverage
        
      - name: Generate coverage report
        run: |
          cd packages/tests
          pnpm test:coverage
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./packages/tests/coverage
          flags: alltests
          name: full-coverage
          fail_ci_if_error: false
          
      - name: Generate coverage badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          coverage-badge-filename: coverage.svg
          generate-coverage-badge: true
          coverage-label: Coverage
          colors: '#4c1 #97ca00 #a4a61d #dfb317 #fe7d37 #e05d44'
          intervals: 100 90 80 70 60 0
          
      - name: Upload coverage badge
        uses: actions/upload-artifact@v3
        with:
          name: coverage-badge
          path: coverage.svg
          
      - name: Comment PR with coverage
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('./packages/tests/coverage/coverage-summary.json', 'utf8'));
            const total = coverage.total;
            
            const comment = `## Coverage Report
            
            | Type | Coverage |
            |------|----------|
            | Lines | ${total.lines.pct}% |
            | Statements | ${total.statements.pct}% |
            | Functions | ${total.functions.pct}% |
            | Branches | ${total.branches.pct}% |
            
            **Overall Coverage: ${total.lines.pct}%**
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });